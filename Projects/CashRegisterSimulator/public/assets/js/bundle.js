/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var MyCustomLibrary;
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/bundle.js":
/*!***********************!*\
  !*** ./src/bundle.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\r\n * Script       :bundle.js\r\n * Author       :Richard Maida Jimenez\r\n * Date         :November 2024.\r\n * Version      :1.0.\r\n * Description  :File linking html page with javascript code.\r\n * \r\n * Version  Date        Author                  Comments\r\n * -------  -------     ---------------------   --------\r\n * 1.00     28/11/2024  Richard Maida Jimenez   Cash Regster Simulator - New Code.\r\n */\r\n\r\n__webpack_require__( /*! ./js/index */ \"./src/js/index.js\");\n\n//# sourceURL=webpack://MyCustomLibrary/./src/bundle.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _cashRegisterClass_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cashRegisterClass.mjs */ \"./src/js/cashRegisterClass.mjs\");\n/* harmony import */ var _cashRegisterMethods_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cashRegisterMethods.mjs */ \"./src/js/cashRegisterMethods.mjs\");\n/*\r\n * Script       :index.js\r\n * Author       :Richard Maida Jimenez\r\n * Date         :November 2024.\r\n * Version      :1.0.\r\n * Description  :Commuter code for the Cash Register Web Page.\r\n * \r\n * Session Storage Items\r\n * ---------------------\r\n *   dayStartDeposit\r\n *   balanceRunning\r\n *   displayMode\r\n *   saleTotal\r\n *   displayAmount\r\n *   lastTxAmount\r\n *   isQtySelected\r\n * \r\n * Version     Date        Author                  Comments\r\n * -------     -------     ---------------------   --------\r\n * 1.00        28/11/2024  Richard Maida Jimenez   Cash Register Web Site.\r\n */\r\n/*\r\n * Declare Imports.\r\n */\r\n\r\n\r\n/*\r\n * Instantiate Cash Register Class.\r\n */\r\nlet cashRegisterClass = new _cashRegisterClass_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n/*\r\n * Declare Form Element Objects.\r\n */\r\nlet cashRegDepStart = document.getElementById( 'cash-reg-dep-start' );\r\nlet cashRegBalRun   = document.getElementById( 'cash-reg-bal-run' );\r\n\r\nlet cashRegDisplayMode      = document.getElementById( 'cash-reg-display-mode' );\r\nlet cashRegDipslaySaleTotal = document.getElementById( 'cash-reg-display-sale-total' );\r\nlet cashRegDisplayAmount    = document.getElementById( 'cash-reg-display-amount' );\r\n\r\n// Mode Buttons.\r\nconst btnSaleCtrl   = document.getElementById( 'btn-sale' );\r\nconst btnRefundCtrl = document.getElementById( 'btn-refund' );\r\nconst btnVoidCtrl   = document.getElementById( 'btn-void' );\r\nconst btnClearCtrl  = document.getElementById( 'btn-clear' );\r\n\r\n// First row of digit buttons.\r\nconst btnSevenCtrl = document.getElementById( 'btn-seven' );\r\nconst btnEightCtrl = document.getElementById( 'btn-eight' );\r\nconst btnNineCtrl  = document.getElementById( 'btn-nine' );\r\n\r\n// Second row of digit buttons.\r\nconst btnFourCtrl = document.getElementById( 'btn-four' );\r\nconst btnFiveCtrl = document.getElementById( 'btn-five' );\r\nconst btnSixCtrl  = document.getElementById( 'btn-six' ) ;\r\n\r\n// Third row of digit buttons.\r\nconst btnOneCtrl   = document.getElementById( 'btn-one' );\r\nconst btnTwoCtrl   = document.getElementById( 'btn-two' );\r\nconst btnThreeCtrl = document.getElementById( 'btn-three' );\r\n\r\n// Fourth row of digit buttons.\r\nconst btnZeroCtrl   = document.getElementById( 'btn-zero' );\r\nconst btnZeroesCtrl = document.getElementById( 'btn-zeroes' );\r\nconst btnDotCtrl    = document.getElementById( 'btn-dot' );\r\n\r\n// Pay Enter Button.\r\nconst btnEnterCtrl     = document.getElementById( 'btn-enter' );\r\nconst btnBackSpaceCtrl = document.getElementById( 'btn-backSpace' );\r\n\r\n// Pay Method Buttons.\r\nconst btnQtyCtrl     = document.getElementById( 'btn-qty' );\r\nconst btnPercentCtrl = document.getElementById( 'btn-percent' );\r\nconst btnCashCtrl    = document.getElementById( 'btn-cash' );\r\nconst btnCardCtrl    = document.getElementById( 'btn-card' );\r\n\r\n// Total Buttons.\r\nconst btnSubTotalCtrl = document.getElementById( 'btn-subtotal' );\r\nconst btnTotalCtrl    = document.getElementById( 'btn-total' );\r\n/*\r\n * Add Event Listeners.\r\n */\r\naddEventListener( 'DOMContentLoaded', eventDOMContentLoaded );\r\naddEventListener( 'load', eventLoaded );\r\n/*\r\n * Form Control Event Listeners.\r\n */\r\ncashRegDepStart.addEventListener( 'blur', eventBlurCashRegDepStart );\r\n\r\n// Mode Buttons.   \r\n  btnSaleCtrl.addEventListener( 'click', eventClickBtnSale );\r\nbtnRefundCtrl.addEventListener( 'click', eventClickBtnRefund );\r\n  btnVoidCtrl.addEventListener( 'click', eventClickBtnVoid );\r\n btnClearCtrl.addEventListener( 'click', eventClickBtnClear );\r\n\r\n// First row of digit buttons.\r\nbtnSevenCtrl.addEventListener( 'click', eventClickBtnSeven );\r\nbtnEightCtrl.addEventListener( 'click', eventClickBtnEight );\r\n btnNineCtrl.addEventListener( 'click', eventClickBtnNine );\r\n\r\n// Second row of digit buttons.\r\nbtnFourCtrl.addEventListener( 'click', eventClickBtnFour );\r\nbtnFiveCtrl.addEventListener( 'click', eventClickBtnFive );\r\n btnSixCtrl.addEventListener( 'click', eventClickBtnSix );\r\n\r\n// Third row of digit buttons.\r\n  btnOneCtrl.addEventListener( 'click', eventClickBtnOne );\r\n  btnTwoCtrl.addEventListener( 'click', eventClickBtnTwo );\r\nbtnThreeCtrl.addEventListener( 'click', eventClickBtnThree );\r\n\r\n// Fourth row of digit buttons.\r\n  btnZeroCtrl.addEventListener( 'click', eventClickBtnZero );\r\nbtnZeroesCtrl.addEventListener( 'click', eventClickBtnZeroes );\r\n   btnDotCtrl.addEventListener( 'click', eventClickBtnDot );\r\n\r\n// Pay Enter Button.\r\n    btnEnterCtrl.addEventListener( 'click', eventClickBtnEnter );\r\nbtnBackSpaceCtrl.addEventListener( 'click', eventClickBtnBackSpace );\r\n\r\n// Pay Method Buttons.\r\n    btnQtyCtrl.addEventListener( 'click', eventClickBtnQty );\r\nbtnPercentCtrl.addEventListener( 'click', eventClickBtnPercent );\r\n   btnCashCtrl.addEventListener( 'click', eventClickBtnCash );\r\n   btnCardCtrl.addEventListener( 'click', eventClickBtnCard );\r\n\r\n// Total Buttons.\r\nbtnSubTotalCtrl.addEventListener( 'click', eventClickBtnSubTotal );\r\n   btnTotalCtrl.addEventListener( 'click', eventClickBtnTotal );\r\n/*\r\n * Event Methods.\r\n */\r\nfunction eventDOMContentLoaded() {\r\n    /*\r\n     * DOMContentLoaded: HTML minus the CSS.\r\n     *\r\n     * USAGE:\r\n     *  IN: N/A.\r\n     * OUT: N/A.\r\n     */\r\n    console.log( 'Event DOMContentLoaded' );\r\n        \r\n    // Sets the Session Storage from Cash Register Class.\r\n    // Sets the Session Storage from Cash Register Class.\r\n    // Sets the form Controls from Session Storage.\r\n    setFormControls();\r\n}\r\n\r\nfunction eventLoaded() {\r\n    /*\r\n     * loaded: CSS loaded.\r\n     * USAGE:\r\n     * ------\r\n     *  IN: N/A.\r\n     * OUT: N/A.\r\n     */\r\n    console.log( 'Event Loaded' );\r\n    setTimeout(() => {\r\n        console.log( 'Load Event.....' );\r\n    }, 2000);\r\n}\r\n\r\nfunction eventBlurCashRegDepStart() {\r\n    /*\r\n     * Tabbing out from the Day Start Cash Deposit Balance.\r\n     *\r\n     * USAGE:\r\n     * ------\r\n     *  IN: N/A.\r\n     * OUT: N/A.\r\n     */\r\n    getFormControls();\r\n\r\n    let dayStartDeposit = cashRegisterClass.getDayStartDeposit();\r\n  \r\n    if ( !isNaN(  dayStartDeposit ) ) {\r\n        cashRegisterClass.setBalanceRunning( dayStartDeposit );\r\n\r\n    } else {\r\n        alert( 'ERROR! Invalid Entry' );\r\n        cashRegisterClass.setDayStartDeposit( 0 );\r\n    }\r\n    setFormControls();\r\n}\r\n\r\n// Mode Buttons.   \r\nfunction eventClickBtnSale() { \r\n    getFormControls();\r\n    cashRegisterClass.setDisplayMode( 'SALE' );\r\n    setFormControls();\r\n}\r\n\r\nfunction eventClickBtnRefund() {\r\n    getFormControls();\r\n    cashRegisterClass.setDisplayMode( 'REFUND' );\r\n    setFormControls();\r\n}\r\n\r\nfunction eventClickBtnVoid() { \r\n    getFormControls();\r\n    cashRegisterClass.setDisplayMode( 'VOID' );\r\n    setFormControls();\r\n}\r\n\r\nfunction eventClickBtnClear() {\r\n    getFormControls();\r\n    cashRegisterClass.setDisplayAmount( 0 );\r\n    setFormControls();\r\n}\r\n\r\n// First row of digit buttons.\r\nfunction eventClickBtnSeven() { eventClickBtnDigit( '7' ); }\r\nfunction eventClickBtnEight() { eventClickBtnDigit( '8' ); }\r\nfunction eventClickBtnNine()  { eventClickBtnDigit( '9' ); }\r\n\r\n// Second row of digit buttons.\r\nfunction eventClickBtnFour() { eventClickBtnDigit( '4' ); }\r\nfunction eventClickBtnFive() { eventClickBtnDigit( '5' ); }\r\nfunction eventClickBtnSix()  { eventClickBtnDigit( '6' ); }\r\n\r\n// Third row of digit buttons.\r\nfunction eventClickBtnOne()   { eventClickBtnDigit( '1' ); }\r\nfunction eventClickBtnTwo()   { eventClickBtnDigit( '2' ); }\r\nfunction eventClickBtnThree() { eventClickBtnDigit( '3' ); }\r\n\r\n// Fourth row of digit buttons.\r\nfunction eventClickBtnZero()   { eventClickBtnDigit( '0' ); }\r\nfunction eventClickBtnZeroes() { eventClickBtnDigit( '00' ); }\r\nfunction eventClickBtnDot()    { eventClickBtnDigit( '.' ); }\r\n\r\nfunction eventClickBtnDigit( anyDigitStrg ) {\r\n    /*\r\n     * Calls appendDisplayAmount using given digit to the Display Amount.\r\n     *\r\n     * USAGE:\r\n     * ------\r\n     *  IN: anyDigitStrg\r\n     * OUT: N/A.\r\n     */\r\n    getFormControls();\r\n\r\n    // Ensure Start Day Position is entered first.\r\n    let errorMessage = _cashRegisterMethods_mjs__WEBPACK_IMPORTED_MODULE_1__.validateDayStart( cashRegisterClass );\r\n\r\n    if ( errorMessage != null ) {\r\n        cashRegisterClass = _cashRegisterMethods_mjs__WEBPACK_IMPORTED_MODULE_1__.appendDisplayAmount( anyDigitStrg, cashRegisterClass );\r\n    } else {\r\n        alert( errorMessage );\r\n    }\r\n\r\n    setFormControls();\r\n}\r\n\r\n// Pay Enter Button.\r\nfunction eventClickBtnEnter() {\r\n\r\n    console.log( 'Enter clicked' );\r\n    getFormControls();\r\n\r\n    if ( cashRegisterClass.getIsQtySelected() == true ) {\r\n        cashRegisterClass.setQuantity( Number( cashRegisterClass.getDisplayAmount() ) );\r\n        cashRegisterClass.setDisplayAmount( 0 );\r\n        cashRegisterClass.setIsQtySelected( false );\r\n\r\n    } else if ( cashRegisterClass.getQuantity() > 0 ) {\r\n        _cashRegisterMethods_mjs__WEBPACK_IMPORTED_MODULE_1__.addToSaleTotalQty( cashRegisterClass );\r\n\r\n    } else if ( cashRegisterClass.getIsCashSelected() == true ) {\r\n        cashRegisterClass = _cashRegisterMethods_mjs__WEBPACK_IMPORTED_MODULE_1__.doPurchaseCash( cashRegisterClass );\r\n\r\n        if ( cashRegisterClass.getErrorMessage().length > 0 ) {\r\n            showErrorMessage();\r\n            cashRegisterClass.setCashSubmitted( 0 );\r\n        }\r\n    } else if ( cashRegisterClass.getIsCardSelected() == true ) {\r\n        cashRegisterClass = _cashRegisterMethods_mjs__WEBPACK_IMPORTED_MODULE_1__.doPurchaseCard( cashRegisterClass );\r\n\r\n    } else {\r\n        _cashRegisterMethods_mjs__WEBPACK_IMPORTED_MODULE_1__.addToSaleTotal( cashRegisterClass );\r\n    }\r\n\r\n    setFormControls();\r\n}\r\n\r\nfunction eventClickBtnBackSpace() {\r\n    getFormControls();\r\n\r\n   // Ensure Start Day Position is entered first.\r\n   let errorMessage = _cashRegisterMethods_mjs__WEBPACK_IMPORTED_MODULE_1__.validateDayStart( cashRegisterClass );\r\n\r\n   if ( errorMessage != null ) {\r\n       cashRegisterClass = _cashRegisterMethods_mjs__WEBPACK_IMPORTED_MODULE_1__.truncateDisplayAmount( cashRegisterClass );\r\n   } else {\r\n       alert( errorMessage );\r\n   }\r\n   setFormControls();\r\n}\r\n\r\n// Pay Method Buttons.\r\nfunction eventClickBtnQty() {\r\n\r\n    console.log( 'Qty Clicked' );\r\n    getFormControls();\r\n    cashRegisterClass.setIsQtySelected( true );\r\n    setFormControls();\r\n}\r\n\r\nfunction eventClickBtnPercent() {\r\n    console.log( 'Percent Clicked' );\r\n    getFormControls();\r\n    setFormControls();\r\n}\r\n\r\nfunction eventClickBtnCash() {\r\n    console.log( 'Cash Clicked' );\r\n    getFormControls();\r\n\r\n    cashRegisterClass.setIsCashSelected( true );\r\n\r\n    setFormControls();\r\n    setFormControlsDisabledTotal( false );\r\n\r\n    if ( cashRegisterClass.getIsCashSelected() == true ) {\r\n    } else if ( cashRegisterClass.getDisplayMode() == 'REFUND' ) {\r\n    } else {\r\n        setFormControlsDisabledTotal( true );\r\n    }\r\n}\r\n\r\nfunction eventClickBtnCard() {\r\n    console.log( 'Card Clicked' );\r\n    getFormControls();\r\n    setFormControls();\r\n\r\n    cashRegisterClass.setIsCardSelected( true )\r\n}\r\n\r\n// Total Buttons.\r\nfunction eventClickBtnSubTotal() {\r\n    console.log( 'SubTotal Clicked' );\r\n    getFormControls();\r\n    setFormControls();\r\n\r\n    setFormControlsDisabledCashCard( false );\r\n}\r\n\r\nfunction eventClickBtnTotal() {\r\n    console.log( 'Total Clicked' )\r\n    getFormControls();\r\n    cashRegisterClass = _cashRegisterMethods_mjs__WEBPACK_IMPORTED_MODULE_1__.updateCashRegister( cashRegisterClass )\r\n    cashRegisterClass = _cashRegisterMethods_mjs__WEBPACK_IMPORTED_MODULE_1__.refreshCashRegister( cashRegisterClass );\r\n    setFormControls();\r\n}\r\n/*\r\n * Common Functions.\r\n */\r\nfunction getFormControls() {\r\n    /*\r\n     * Sets the controls on the page using a given Weather Report Params.\r\n     *\r\n     * USAGE:\r\n     * ------\r\n     *  IN: N/A.\r\n     * OUT: N/A.\r\n     */\r\n    /*\r\n     * Pass values from Form Controls to Session Storage.\r\n     * NOTE! THESE VALUES ARE STRINGS.\r\n     */\r\n    sessionStorage.setItem( 'dayStartDeposit', cashRegDepStart.value );\r\n    sessionStorage.setItem( 'balanceRunning' , cashRegBalRun.value );\r\n    sessionStorage.setItem( 'saleTotal'      , cashRegDipslaySaleTotal.value );\r\n    sessionStorage.setItem( 'displayMode'    , cashRegDisplayMode.value );\r\n    sessionStorage.setItem( 'displayAmount'  , cashRegDisplayAmount.value );\r\n    /*\r\n     * Pass values from Session Storage to Cash Register Class..\r\n     * NOTE! STRINGS IN SESSION STORAGE NEED TO CONVERT TO NUMBER BEFORE PASSING INTO CLASS.\r\n     */\r\n    cashRegisterClass.setDayStartDeposit( Number( sessionStorage.getItem( 'dayStartDeposit' ) ) );\r\n    cashRegisterClass.setBalanceRunning(  Number( sessionStorage.getItem( 'balanceRunning'  ) ) );\r\n    cashRegisterClass.setDisplayMode(             sessionStorage.getItem( 'displayMode'     ) );\r\n    cashRegisterClass.setSaleTotalAmount( Number( sessionStorage.getItem( 'saleTotal'       ) ) );  \r\n    cashRegisterClass.setDisplayAmount(           sessionStorage.getItem( 'displayAmount'   ) );\r\n    cashRegisterClass.setLastTxAmount(    Number( sessionStorage.getItem( 'lastTxAmount'    ) ) );\r\n    cashRegisterClass.setIsQtySelected(  sessionStorage.getItem( 'isQtySelected'   ) ) ;\r\n\r\n    if ( sessionStorage.getItem( 'isQtySelected' ) == '0' ) {\r\n        cashRegisterClass.setIsQtySelected( false );\r\n    } else {\r\n        cashRegisterClass.setIsQtySelected( true );\r\n    }\r\n    cashRegisterClass.setQuantity( Number( sessionStorage.getItem( 'quantity' ) ) );\r\n}\r\n\r\nfunction setFormControls() {\r\n    /*\r\n     * Sets the controls on the page using a given Weather Report Params.\r\n     *\r\n     * USAGE:\r\n     * ------\r\n     *  IN: N/A\r\n     * OUT: N/A\r\n     */\r\n    /*\r\n     * Pass values from Cash Register Class to Session Storage.\r\n     * NOTE! - Numbers become strings when passed to session storage.\r\n     */ \r\n    sessionStorage.setItem( 'dayStartDeposit', cashRegisterClass.getDayStartDeposit() );\r\n    sessionStorage.setItem( 'balanceRunning' , cashRegisterClass.getBalanceRunning() );\r\n    sessionStorage.setItem( 'displayMode'    , cashRegisterClass.getDisplayMode() );\r\n    sessionStorage.setItem( 'saleTotal'      , cashRegisterClass.getSaleTotalAmount() );\r\n    sessionStorage.setItem( 'displayAmount'  , cashRegisterClass.getDisplayAmount() );\r\n    sessionStorage.setItem( 'lastTxAmount'   , cashRegisterClass.getLastTxAmount() );\r\n\r\n    if ( cashRegisterClass.getIsQtySelected() == false ) {\r\n        sessionStorage.setItem( 'isQtySelected', '0' ) \r\n    } else {\r\n        sessionStorage.setItem( 'isQtySelected', '1' );\r\n    }\r\n    sessionStorage.setItem( 'quantity'       , cashRegisterClass.getQuantity() );\r\n    /*\r\n     * Pass values from Session Storage to Form Controls.\r\n     * NOTE! Session storage values need to go from String To Number to Fixed 2 Decimals (as String ).\r\n     */\r\n    cashRegDepStart.value         = _cashRegisterMethods_mjs__WEBPACK_IMPORTED_MODULE_1__.numberStringToFixed( sessionStorage.getItem( 'dayStartDeposit' ) );\r\n    cashRegBalRun.value           = _cashRegisterMethods_mjs__WEBPACK_IMPORTED_MODULE_1__.numberStringToFixed( sessionStorage.getItem( 'balanceRunning'  ) );\r\n    cashRegDipslaySaleTotal.value = _cashRegisterMethods_mjs__WEBPACK_IMPORTED_MODULE_1__.numberStringToFixed( sessionStorage.getItem( 'saleTotal') );\r\n    cashRegDisplayMode.value      =                                          sessionStorage.getItem( 'displayMode' );\r\n    cashRegDisplayAmount.value    =                                          sessionStorage.getItem( 'displayAmount');\r\n    \r\n    setFormControlsDisabled();\r\n}\r\n\r\nfunction setFormControlsDisabled() {\r\n\r\n    let isEnterDigitDisabled  = ( cashRegDisplayMode.value == 'INIT' );\r\n\r\n    let isDisplayModeSaleDisabled   = true;\r\n    let isDisplayModeRefundDisabled = true;\r\n    let isDisplayModeVoidDisabled   = true;\r\n    let isDisplayModeClearDisabled  = true;\r\n   \r\n    switch( cashRegDisplayMode.value ) {\r\n        case   'INIT':\r\n            if ( Number( cashRegBalRun.value ) > 0.00 ) {\r\n                isDisplayModeSaleDisabled   = false;\r\n                isDisplayModeRefundDisabled = false;\r\n                isDisplayModeVoidDisabled   = false;\r\n                isDisplayModeClearDisabled  = false;\r\n            }\r\n            break;\r\n\r\n        case   'SALE':\r\n            isDisplayModeSaleDisabled   = false;\r\n            break;\r\n\r\n        case 'REFUND':\r\n            isDisplayModeRefundDisabled = false;\r\n            break;\r\n\r\n        case   'VOID':\r\n            isDisplayModeVoidDisabled   = false;\r\n            break;\r\n\r\n        case  'CLEAR':\r\n            isDisplayModeClearDisabled  = false; \r\n            break;\r\n\r\n        default:\r\n            isEnterDigitDisabled = true;\r\n    }\r\n\r\n    document.getElementById( 'cash-reg-bal-run'            ).disabled = true;\r\n    document.getElementById( 'cash-reg-display-mode'       ).disabled = true;\r\n    document.getElementById( 'cash-reg-display-sale-total' ).disabled = true;\r\n    document.getElementById( 'cash-reg-display-amount'     ).disabled = true;\r\n\r\n    document.getElementById( 'btn-sale'   ).disabled = isDisplayModeSaleDisabled;\r\n    document.getElementById( 'btn-refund' ).disabled = isDisplayModeRefundDisabled;\r\n    document.getElementById( 'btn-void'   ).disabled = isDisplayModeVoidDisabled;\r\n    document.getElementById( 'btn-clear'  ).disabled = isDisplayModeClearDisabled;\r\n\r\n    document.getElementById( 'btn-seven' ).disabled = isEnterDigitDisabled;\r\n    document.getElementById( 'btn-eight' ).disabled = isEnterDigitDisabled;\r\n    document.getElementById( 'btn-nine'  ).disabled = isEnterDigitDisabled;\r\n\r\n    document.getElementById( 'btn-four' ).disabled = isEnterDigitDisabled;\r\n    document.getElementById( 'btn-five' ).disabled = isEnterDigitDisabled;\r\n    document.getElementById( 'btn-six'  ).disabled = isEnterDigitDisabled;\r\n\r\n    document.getElementById( 'btn-one'   ).disabled = isEnterDigitDisabled;\r\n    document.getElementById( 'btn-two'   ).disabled = isEnterDigitDisabled;\r\n    document.getElementById( 'btn-three' ).disabled = isEnterDigitDisabled;\r\n\r\n    document.getElementById( 'btn-zero'   ).disabled = isEnterDigitDisabled;\r\n    document.getElementById( 'btn-zeroes' ).disabled = isEnterDigitDisabled;\r\n    document.getElementById( 'btn-dot'    ).disabled = isEnterDigitDisabled;\r\n\r\n    document.getElementById( 'btn-enter'     ).disabled = isEnterDigitDisabled;\r\n    document.getElementById( 'btn-backSpace' ).disabled = isEnterDigitDisabled;\r\n\r\n    document.getElementById( 'btn-qty'     ).disabled = isEnterDigitDisabled;\r\n    document.getElementById( 'btn-percent' ).disabled = isEnterDigitDisabled;\r\n\r\n    document.getElementById( 'btn-subtotal' ).disabled = isEnterDigitDisabled;\r\n\r\n    setFormControlsDisabledCashCard( true );\r\n    setFormControlsDisabledTotal( true );\r\n}\r\n\r\nfunction setFormControlsDisabledCashCard( anyFlag ) {\r\n\r\n    document.getElementById( 'btn-cash' ).disabled = anyFlag;\r\n    document.getElementById( 'btn-card' ).disabled = anyFlag;\r\n}\r\n\r\nfunction setFormControlsDisabledTotal( anyFlag ) {\r\n\r\n    document.getElementById( 'btn-total'    ).disabled = anyFlag;\r\n}\r\n\r\nfunction showErrorMessage() {\r\n    alert(cashRegisterClass.getErrorMessage() );\r\n    cashRegisterClass.setErrorMessage( '' );\r\n}\r\n\n\n//# sourceURL=webpack://MyCustomLibrary/./src/js/index.js?");

/***/ }),

/***/ "./src/js/cashRegisterClass.mjs":
/*!**************************************!*\
  !*** ./src/js/cashRegisterClass.mjs ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CashRegister)\n/* harmony export */ });\n/*\r\n * Script       :CashRegParams.mjs\r\n * Author       :Richard Maida Jimenez\r\n * Version      :1.00\r\n * Date         :October 2024.\r\n * Description  :Properties and Methods associated with the Cash Register for the Web Cash Register Simulator.\r\n */\r\n/*\r\n * Declare Imports.\r\n */\r\n/*\r\n * Declare Class.\r\n */\r\nclass CashRegister {\r\n    /*\r\n     * All variables and private.\r\n     */\r\n    _dayStartDeposit = null;\r\n    _balanceRunning  = null;\r\n    _displayMode     = null;\r\n    _displayAmount   = null;\r\n    _saleTotalAmount = null;\r\n    _lastTxAmount    = null;\r\n    _isQtySelected   = null;\r\n    _quantity        = null;\r\n    _isCashSelected  = null;\r\n    _cashSubmitted   = null;\r\n    _cashChange      = null;\r\n    _isCardSelected  = null;\r\n    _cardAmount      = null;\r\n    _errorMessage    = null;\r\n     /*\r\n     * Constructor.\r\n     */\r\n    constructor() {\r\n        this.setDayStartDeposit( 0 );\r\n        this.setBalanceRunning( 0 );\r\n        this.setDisplayMode( 'INIT' );\r\n        this.setDisplayAmount( 0 ); \r\n        this.setSaleTotalAmount( 0 );\r\n        this.setLastTxAmount( 0 );\r\n        this.setIsQtySelected( false );\r\n        this.setQuantity( 0 );\r\n        this.setIsCashSelected( false );\r\n        this.setCashSubmitted( 0 );\r\n        this.setCashChange( 0 );\r\n        this.setIsCardSelected( false );\r\n        this.setCardAmount( 0 );\r\n        this.setErrorMessage( '' );\r\n    }\r\n    /*\r\n     * Accessor methods (public)....Basic Data.\r\n     */\r\n    // Balance Day Start.\r\n    getDayStartDeposit() {\r\n        /*\r\n         * Returns Day Start Deposit.\r\n         */\r\n        return this._dayStartDeposit;\r\n    }\r\n    \r\n    setDayStartDeposit( anyDayStartDeposit ) {\r\n        /*\r\n         * Sets Day Start Deposit with a given amount.\r\n         */\r\n        this._dayStartDeposit = anyDayStartDeposit;\r\n    }\r\n    \r\n    // Running Balance. \r\n    getBalanceRunning() {\r\n        /*\r\n         * Returns Running Balance.\r\n         */\r\n        return this._balanceRunning;\r\n    }\r\n\r\n    setBalanceRunning( anyBalanceRunning ) {\r\n        /*\r\n         * Sets Running Balance.\r\n         *\r\n         * USAGE:\r\n         * -----\r\n         * IN : anyBalanceRunning - amount to add or subtract from running total.\r\n         */\r\n         this._balanceRunning = anyBalanceRunning;\r\n    }\r\n\r\n    setBalanceRunningAmend( anyBalanceUpdate, anyCrDr ) {\r\n        /*\r\n         * Sets Running Balance with a given update and a given Credit or Debit.\r\n         *\r\n         * USAGE:\r\n         * -----\r\n         * IN : anyBalanceUpdate - amount to add or subtract from running total.\r\n         *      anyCrDr          - Credit/Debit.\r\n         * OUT: isOk - boolean denotes if update okay or not. Caller raises error if not okay.\r\n         */\r\n        let isOk = true;\r\n\r\n        if ( anyCrDr == 'CR') {\r\n            this._balanceRunning += anyBalanceUpdate;\r\n\r\n        } else {\r\n            if ( anyBalanceUpdate > this._balanceRunning ) {\r\n                isOk = false;\r\n\r\n            } else {\r\n                this._balanceRunning -= anyBalanceUpdate;\r\n            }\r\n        }\r\n\r\n        if ( isOk ) {\r\n            this._balanceRunning = Math.ceil( this._balanceRunning * 100 ) / 100;    // To 2 dp.\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    // Display Mode.\r\n    getDisplayMode() {\r\n        return this._displayMode;\r\n    }\r\n    \r\n    setDisplayMode( anyDisplayMode ) {\r\n        this._displayMode = anyDisplayMode;\r\n    }\r\n    \r\n    // Display Amount.\r\n    getDisplayAmount() {\r\n        return this._displayAmount;\r\n    }\r\n\r\n    setDisplayAmount( anyDisplayAmount ) {\r\n        this._displayAmount = anyDisplayAmount;\r\n    }\r\n\r\n    // Sale Total Amount.\r\n    getSaleTotalAmount() {\r\n        return this._saleTotalAmount;\r\n    }\r\n\r\n    setSaleTotalAmount( anySaleAmount ) {\r\n        this._saleTotalAmount = anySaleAmount;\r\n    }\r\n\r\n    setSaleTotalAmountAdd( anyDisplayAmount ) {\r\n        this._saleTotalAmount += anyDisplayAmount;\r\n    }\r\n\r\n    // Last Transaction Amount.\r\n    getLastTxAmount() {\r\n        return this._lastTxAmount;\r\n    }\r\n\r\n    setLastTxAmount( anyLastTxAmount ) {\r\n        this._lastTxAmount = anyLastTxAmount;\r\n        return;\r\n    }\r\n\r\n    getIsQtySelected() {\r\n        return this._isQtySelected;    \r\n    }\r\n\r\n    setIsQtySelected( anyFlag ) {\r\n        this._isQtySelected = anyFlag;\r\n    }\r\n\r\n    getQuantity() {\r\n        return this._quantity;\r\n    }\r\n    \r\n    setQuantity( anyQuantity ) {\r\n        this._quantity = anyQuantity;\r\n    }\r\n\r\n    getIsCashSelected() {\r\n        return this._isCashSelected;\r\n    }\r\n\r\n    setIsCashSelected( anyIsCashSelected ) {\r\n        this._isCashSelected = anyIsCashSelected;\r\n    }\r\n   \r\n    getCashSubmitted() {\r\n        return this._cashSubmitted;\r\n    }\r\n\r\n    setCashSubmitted( anyCashSubmitted ) {\r\n        this._cashSubmitted = anyCashSubmitted;\r\n    }\r\n\r\n    getCashChange() {\r\n        return this._cashChange;\r\n    }\r\n\r\n    setCashChange( anyCashChange ) {\r\n        this._cashChange = anyCashChange;\r\n    }\r\n\r\n    getIsCardSelected() {\r\n        return this._isCardSelected;\r\n    }\r\n\r\n    setIsCardSelected( anyIsCardSelected ) {\r\n        this._isCardSelected = anyIsCardSelected;\r\n    }\r\n\r\n    getCardAmount() {\r\n        return this._cardAmount;\r\n    }\r\n\r\n    setCardAmount( anyCardAmount ) {\r\n        this._cardAmount = anyCardAmount;\r\n    }\r\n\r\n    getErrorMessage() {\r\n        return this._errorMessage;\r\n    }\r\n\r\n    setErrorMessage( anyErrorMessage ) {\r\n        this._errorMessage = anyErrorMessage;\r\n    }\r\n}\r\n    /*\r\n     * Accessor methods (public)....Audit Transction Data.\r\n     *\r\n    // Count of Audit Transaction.\r\n    getAuditTxCount() {\r\n        return this.#auditTxCount;\r\n    }\r\n\r\n    setAuditTxCount( anyTxCount ) {\r\n        this.#auditTxCount = anyTxCount;\r\n    }\r\n\r\n    setAuditTxCountIncr() {\r\n        this.#auditTxCount++;\r\n    }\r\n \r\n    // Pay Type Codes.\r\n    getAuditTxPayTypeCodes() {\r\n        return this.#auditTxPayTypeCodes;\r\n    }\r\n\r\n    setAuditTxPayTypeCodesAdd( anyTxTypeCode ) {\r\n        this.#auditTxPayTypeCodes.push( anyTxTypeCode );\r\n        return;\r\n    }\r\n\r\n    // Pay Type Descs.\r\n    getAuditTxPayTypeDescs() {\r\n        return this.#auditTxPayTypeDescs;\r\n    }\r\n    \r\n    setAuditTxPayTypeDescsAdd( anyTxPayTypeDesc ) {\r\n        this.#auditTxPayTypeDescs.push( anyTxPayTypeDesc );\r\n    }\r\n    \r\n    // Running Balance As At Previous Transaction.\r\n    getAuditTxRunPrev() {\r\n        return this.#auditTxRunPrev;\r\n    }\r\n\r\n    setAuditTxRunPrevAdd( anyTxRunPrev ) {\r\n        this.#auditTxRunPrev.push( anyTxRunPrev );\r\n        return;\r\n    }\r\n\r\n    // Transaction Amounts.\r\n    getAuditTxAmounts() {\r\n        return this.#auditTxAmounts;\r\n    }\r\n\r\n    setAuditTxAmountsAdd(  anyTxAmount ) {\r\n        this.#auditTxAmounts.push( anyTxAmount );\r\n        return;\r\n    }\r\n\r\n    // Cash Submitted.\r\n    getAuditTxCashSubmits() {\r\n        return this.#auditTxCashSubmits;\r\n    }\r\n    \r\n    setAuditTxCashSubmitsAdd( anyCashSubmit ) {\r\n        this.#auditTxCashSubmits.push( anyCashSubmit )\r\n    }\r\n\r\n    // Change Due.\r\n    getAuditTxChangeDues() {\r\n        return this.#auditTxChangeDues;\r\n    }\r\n\r\n    setAuditTxChangeDuesAdd( anyChangeDue ) {\r\n        this.#auditTxChangeDues.push( anyChangeDue );\r\n        return\r\n    }\r\n  \r\n    // VAT.\r\n    getAuditTxVATs() {\r\n        return this.#auditTxVATs;\r\n    } \r\n    \r\n    setAuditTxVATsAdd( anyAuditVAT ) {\r\n        this.#auditTxVATs.push( anyAuditVAT );\r\n        return\r\n    }\r\n\r\n    // Pay Methods.\r\n    getAuditTxPayMethods() {\r\n        return this.#auditTxPayMethods;\r\n    }\r\n    \r\n    setAuditTxPayMethodsAdd( anyTxPayMethod ) {\r\n        this.#auditTxPayMethods.push( anyTxPayMethod );\r\n        return;\r\n    }\r\n\r\n    getAuditTxRunBal() {\r\n        return this.#auditTxRunBal;\r\n    }\r\n\r\n    setAuditTxRunBalAdd( anyTxRunBal ) {\r\n        this.#auditTxRunBal.push( anyTxRunBal );\r\n        return;\r\n    }\r\n\r\n    getAuditTxLog() {\r\n        return this.#auditTxLog;\r\n    }\r\n\r\n    setAuditTxLog( anyAuditTxHeaders ) {\r\n\r\n        this.#auditTxLog = [];\r\n        let auditTxRow   = [];\r\n        let thisHdrCol   = 0;\r\n        let thisTxRow    = 0;\r\n\r\n        for ( thisHdrCol == 0; thisHdrCol < anyAuditTxHeaders.length; thisHdrCol++ ) {\r\n            auditTxRow[thisHdrCol] = anyAuditTxHeaders[thisHdrCol];\r\n        }\r\n        this.#auditTxLog.push( auditTxRow );\r\n\r\n        for ( thisTxRow == 0; thisTxRow < this.#auditTxAmounts.length; thisTxRow++ ) {\r\n            auditTxRow = [];\r\n\r\n            auditTxRow[0] = this.getAuditTxPayTypeCodes()[thisTxRow];\r\n            auditTxRow[1] = this.getAuditTxPayTypeDescs()[thisTxRow];\r\n            auditTxRow[2] = this.getAuditTxRunPrev()[thisTxRow];\r\n            auditTxRow[3] = this.getAuditTxAmounts()[thisTxRow];\r\n            auditTxRow[4] = this.getAuditTxCashSubmits()[thisTxRow];\r\n            auditTxRow[5] = this.getAuditTxChangeDues()[thisTxRow];\r\n            auditTxRow[6] = this.getAuditTxRunBal()[thisTxRow];\r\n            auditTxRow[7] = this.getAuditTxPayMethods()[thisTxRow];\r\n            auditTxRow[8] = this.getAuditTxVATs()[thisTxRow];\r\n\r\n            this.#auditTxLog.push( auditTxRow );\r\n        }\r\n        \r\n        return;\r\n    }\r\n\r\n    setTxAuditLogAdd( anyPaymentTypeCode, anyPaymentTypeDesc, anyBalancePrevious, anyAuditTxAmount,\r\n                      anyAuditCashSubmit, anyAuditChangeDue, anyAuditTxVAT ) {\r\n\r\n        this.setAuditTxCountIncr();\r\n        this.setAuditTxPayTypeCodesAdd( anyPaymentTypeCode );\r\n        this.setAuditTxPayTypeDescsAdd( anyPaymentTypeDesc );\r\n        this.setAuditTxRunPrevAdd( anyBalancePrevious, );\r\n        this.setAuditTxAmountsAdd(  anyAuditTxAmount );\r\n        this.setAuditTxCashSubmitsAdd( anyAuditCashSubmit ) ;\r\n        this.setAuditTxChangeDuesAdd( anyAuditChangeDue );\r\n        this.setAuditTxVATsAdd( anyAuditTxVAT );\r\n        this.setAuditTxRunBalAdd( this.getBalanceRunning() );\r\n        this.setAuditTxPayMethodsAdd( 'CASH' );   // Cash only for now.\r\n\r\n        return\r\n    }\r\n}\r\n   /*#balanceCash  = 0.00; // Running cash balance.\r\n    #balanceCard  = 0.00; // Running card balance.\r\n    #totalGbp20   = 0.00; // £20 Pound notes total.\r\n    #totalGbp10   = 0.00; // £10 Pound notes total.\r\n    #totalGbp5    = 0.00; // £5  Pound notes total.\r\n    #totalPence50 = 0.00; // 50p coins total.\r\n    #totalPence20 = 0.00; // 20p coins total.\r\n    #totalPence10 = 0.00; // 10p coins total.\r\n    #totalPence5  = 0.00; // 5p coins total.\r\n    #totalPence2  = 0.00; // 2p coins total.\r\n    #totalPence1  = 0.00; // 1p coins total.*/\n\n//# sourceURL=webpack://MyCustomLibrary/./src/js/cashRegisterClass.mjs?");

/***/ }),

/***/ "./src/js/cashRegisterMethods.mjs":
/*!****************************************!*\
  !*** ./src/js/cashRegisterMethods.mjs ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToSaleTotal: () => (/* binding */ addToSaleTotal),\n/* harmony export */   addToSaleTotalQty: () => (/* binding */ addToSaleTotalQty),\n/* harmony export */   appendDisplayAmount: () => (/* binding */ appendDisplayAmount),\n/* harmony export */   doPurchaseCard: () => (/* binding */ doPurchaseCard),\n/* harmony export */   doPurchaseCash: () => (/* binding */ doPurchaseCash),\n/* harmony export */   numberStringToFixed: () => (/* binding */ numberStringToFixed),\n/* harmony export */   refreshCashRegister: () => (/* binding */ refreshCashRegister),\n/* harmony export */   truncateDisplayAmount: () => (/* binding */ truncateDisplayAmount),\n/* harmony export */   updateCashRegister: () => (/* binding */ updateCashRegister),\n/* harmony export */   validateDayStart: () => (/* binding */ validateDayStart)\n/* harmony export */ });\n/* harmony import */ var _cashRegisterClass_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cashRegisterClass.mjs */ \"./src/js/cashRegisterClass.mjs\");\n/*\r\n * Script       :CashRegParams.mjs\r\n * Author       :Richard Maida Jimenez\r\n * Version      :1.00\r\n * Date         :November 2024.\r\n * Description  :Methods associated with the Cash Register for the Web Cash Register Simulator.\r\n */\r\n/*\r\n * Declare Imports.\r\n */\r\n\r\n\r\nfunction addToSaleTotal( anyCashRegisterClass ) {\r\n\r\n    let displayAmount = Number( anyCashRegisterClass.getDisplayAmount() );\r\n    \r\n    anyCashRegisterClass.setSaleTotalAmountAdd( displayAmount );\r\n    anyCashRegisterClass.setDisplayAmount( 0 );\r\n    \r\n    return anyCashRegisterClass;\r\n}\r\n\r\nfunction addToSaleTotalQty( anyCashRegisterClass ) {\r\n\r\n    let displayAmount = Number( anyCashRegisterClass.getDisplayAmount() );\r\n    let quantity      =         anyCashRegisterClass.getQuantity() ;\r\n    let saleAmount    = displayAmount * quantity;\r\n\r\n    anyCashRegisterClass.setSaleTotalAmountAdd( saleAmount );\r\n    anyCashRegisterClass.setDisplayAmount( 0 );\r\n    anyCashRegisterClass.setQuantity( 0 );\r\n}\r\n\r\nfunction appendDisplayAmount( anyDigitStrg, anyCashRegisterClass ) {\r\n    /*\r\n     * Appends a given digit to the Display Amount.\r\n     *\r\n     * USAGE:\r\n     * ------\r\n     *  IN: anyDigitStrg\r\n     *      anyCashRegisterClass\r\n     * OUT: anyCashRegisterClass\r\n     */\r\n    let decInStrg     = '';\r\n    let dispAmtArray  = '';\r\n    let displayAmount = anyCashRegisterClass.getDisplayAmount();\r\n\r\n    if ( displayAmount == 0 ) {\r\n        displayAmount = anyDigitStrg; \r\n\r\n    } else {\r\n        displayAmount += anyDigitStrg;\r\n        decInStrg      = displayAmount.indexOf( '.' );\r\n\r\n        if ( decInStrg > 0 ) {\r\n            dispAmtArray = displayAmount.split('.');\r\n\r\n            if ( dispAmtArray[1].length > 2 ) {\r\n                dispAmtArray[1] = dispAmtArray[1].substring( 0, 2 );\r\n            }\r\n            displayAmount = dispAmtArray[0] + '.' + dispAmtArray[1];\r\n        }\r\n    }\r\n    anyCashRegisterClass.setDisplayAmount( displayAmount );\r\n    return anyCashRegisterClass\r\n}\r\n\r\nfunction truncateDisplayAmount( anyCashRegisterClass ) {\r\n\r\n    let displayAmount = anyCashRegisterClass.getDisplayAmount();\r\n        displayAmount = parseInt( displayAmount.toString().slice( 0, -1) );\r\n\r\n    if ( isNaN( displayAmount ) ) {\r\n        displayAmount = 0;\r\n    }\r\n\r\n    anyCashRegisterClass.setDisplayAmount( displayAmount );\r\n\r\n    return anyCashRegisterClass;\r\n}\r\n\r\nfunction numberStringToFixed( anyNumberString ) {\r\n    /*\r\n     * Passed back number as string fixed to 2 decimals from a given string which must be cast as \r\n     * number first.\r\n     * \r\n     * USAGE:\r\n     * ------\r\n     *  IN: anyNumberString\r\n     * OUT: numberDecimal.\r\n     */\r\n    let numberFormat  = Number( anyNumberString );\r\n    let numberDecimal = numberFormat.toFixed(2);\r\n\r\n    return numberDecimal;\r\n}\r\n\r\nfunction validateDayStart( anyCashRegisterClass ) {\r\n    /*\r\n     * Returns valid flag after ensuring a Start Day Position has been entered.\r\n     *\r\n     * USAGE:\r\n     * ------\r\n     *  IN: anyCashRegisterClass.\r\n     * OUT: errorMessage.\r\n     */\r\n    let errorMessage = '';\r\n\r\n    if ( anyCashRegisterClass.getDayStartDeposit() <= 0 ) {\r\n        errorMessage = 'Transactions cannot be entered until Day Start Cash Deposit has been entered.';\r\n    }\r\n    return errorMessage;\r\n}   \r\n\r\nfunction doPurchaseCard( anyCashRegisterClass ) {\r\n\r\n    anyCashRegisterClass.setCardAmount( anyCashRegisterClass.getDisplayAmount() );\r\n\r\n    return anyCashRegisterClass;\r\n}\r\n\r\nfunction doPurchaseCash( anyCashRegisterClass ) {\r\n\r\n    anyCashRegisterClass.setCashSubmitted( anyCashRegisterClass.getDisplayAmount() );\r\n\r\n    let balRunPrevious  = anyCashRegisterClass.getBalanceRunning();\r\n    let cashChangeCheck = anyCashRegisterClass.getCashSubmitted() - anyCashRegisterClass.getSaleTotalAmount();\r\n\r\n    if ( cashChangeCheck < 0 ) {\r\n        anyCashRegisterClass.setErrorMessage( 'Insufficient Cash Submitted' );\r\n    }\r\n\r\n    if ( anyCashRegisterClass.getErrorMessage().length == 0 ) {\r\n        //anyCashRegisterClass.setCashSubmitted( anyCashRegisterClass.getDisplayAmount() );\r\n        anyCashRegisterClass.setCashChange( anyCashRegisterClass.getCashSubmitted() -  anyCashRegisterClass.getSaleTotalAmount() )\r\n\r\n        let cashBalNotional = balRunPrevious + anyCashRegisterClass.getCashSubmitted();\r\n        anyCashRegisterClass.setDisplayAmount( anyCashRegisterClass.getCashChange() );\r\n    }\r\n\r\n    return anyCashRegisterClass;\r\n}\r\n\r\nfunction updateCashRegister( anyCashRegisterClass ) {\r\n    let cr_dr = ''\r\n\r\n    switch( anyCashRegisterClass.getDisplayMode() ) {\r\n        case 'SALE':\r\n            cr_dr = 'CR';\r\n            break;\r\n\r\n        case 'REFUND':\r\n            cr_dr = 'DR';\r\n            break;\r\n    }\r\n\r\n    anyCashRegisterClass.setBalanceRunningAmend( anyCashRegisterClass.getSaleTotalAmount(), cr_dr );\r\n    anyCashRegisterClass.setLastTxAmount( anyCashRegisterClass.getSaleTotalAmount() );\r\n\r\n    return anyCashRegisterClass;\r\n}\r\n\r\nfunction refreshCashRegister( anyCashRegisterClass ) {\r\n\r\n    anyCashRegisterClass.setDisplayAmount( 0 );\r\n    anyCashRegisterClass.setSaleTotalAmount( 0 );\r\n    anyCashRegisterClass.setIsCashSelected( false );\r\n    anyCashRegisterClass.setCashSubmitted( 0 );\r\n    anyCashRegisterClass.setCashChange( 0 );\r\n    anyCashRegisterClass.setIsCardSelected( false );\r\n    anyCashRegisterClass.setCardAmount( 0 );\r\n    anyCashRegisterClass.setDisplayMode( 'INIT' );\r\n\r\n    return anyCashRegisterClass;\r\n}\n\n//# sourceURL=webpack://MyCustomLibrary/./src/js/cashRegisterMethods.mjs?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/bundle.js");
/******/ 	MyCustomLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;